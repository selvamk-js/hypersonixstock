import React, { createRef, useEffect, useState } from 'react';
import { StyleSheet, View } from 'react-native';
import { WebView } from 'react-native-webview';
import { Asset, FileSystem } from 'react-native-unimodules';

import { useInjectReducer, useInjectSaga } from 'utils/redux-injectors';
import { stockSliceKey, reducer, actions } from './slice';
import { stockSaga } from './saga';
// @ts-ignore
import { useDispatch, useSelector } from 'react-redux';
import { selectStockData } from './selectors';

const Stock = () => {
  useInjectReducer({ key: stockSliceKey, reducer: reducer });
  useInjectSaga({ key: stockSliceKey, saga: stockSaga });

  const [layoutHTML, setLayoutHTML] = useState('');
  const webView = createRef();

  const dispatch = useDispatch();
  const stcokData = useSelector(selectStockData);

  useEffect(() => {
    dispatch(actions.loadStockData());
  }, [dispatch]);

  const getAssetAsString = async (asset: Asset) => {
    const downloadedModules = await FileSystem.readDirectoryAsync(
      FileSystem.cacheDirectory
    );
    let fileName = 'ExponentAsset-' + asset.hash + '.' + asset.type;

    if (!downloadedModules.includes(fileName)) {
      await asset.downloadAsync();
    }

    return await FileSystem.readAsStringAsync(
      FileSystem.cacheDirectory + fileName
    );
  };

  const setLayout = async () => {
    const indexHtml = Asset.fromModule(require('../../assets/html/index.html'));

    setLayoutHTML(await getAssetAsString(indexHtml));
  };

  return (
    <View style={styles.container}>
      <WebView
        ref={webView}
        source={{
          html: layoutHTML,
        }}
        originWhitelist={['*']}
        automaticallyAdjustContentInsets={true}
        allowFileAccess={true}
        javaScriptEnabled={true}
        domStorageEnabled={true}
        useWebKit={true}
        scrollEnabled={false}
        mixedContentMode="always"
        allowFileAccessFromFileURLs={true}
      />
    </View>
  );
};

const styles = StyleSheet.create({
  container: {
    backgroundColor: '#fff',
    justifyContent: 'center',
    height: 500,
  },
});

export default Stock;
